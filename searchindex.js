Search.setIndex({"alltitles": {"API Documentation": [[0, null]], "Developer Guide": [[10, null]], "Getting Started": [[11, null]], "User Guide": [[13, null]], "Welcome to ASTRA's documentation!": [[12, null]], "astra.benchmark": [[1, null]], "astra.cli": [[2, null]], "astra.compare": [[3, null]], "astra.data.processing": [[4, null]], "astra.metrics": [[5, null]], "astra.model_selection": [[6, null]], "astra.models.classification": [[7, null]], "astra.models.regression": [[8, null]], "astra.utils": [[9, null]]}, "docnames": ["api", "autosummary/astra.benchmark", "autosummary/astra.cli", "autosummary/astra.compare", "autosummary/astra.data.processing", "autosummary/astra.metrics", "autosummary/astra.model_selection", "autosummary/astra.models.classification", "autosummary/astra.models.regression", "autosummary/astra.utils", "developer_guide", "getting_started", "index", "user_guide"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "autosummary/astra.benchmark.rst", "autosummary/astra.cli.rst", "autosummary/astra.compare.rst", "autosummary/astra.data.processing.rst", "autosummary/astra.metrics.rst", "autosummary/astra.model_selection.rst", "autosummary/astra.models.classification.rst", "autosummary/astra.models.regression.rst", "autosummary/astra.utils.rst", "developer_guide.rst", "getting_started.rst", "index.rst", "user_guide.rst"], "indexentries": {"__dict__ (astra.data.processing.correlationfilter attribute)": [[4, "astra.data.processing.CorrelationFilter.__dict__", false]], "__getstate__() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter.__getstate__", false]], "__init__() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter.__init__", false]], "__init_subclass__() (astra.data.processing.correlationfilter class method)": [[4, "astra.data.processing.CorrelationFilter.__init_subclass__", false]], "__module__ (astra.data.processing.correlationfilter attribute)": [[4, "astra.data.processing.CorrelationFilter.__module__", false]], "__repr__() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter.__repr__", false]], "__setstate__() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter.__setstate__", false]], "__sklearn_clone__() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter.__sklearn_clone__", false]], "__sklearn_tags__() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter.__sklearn_tags__", false]], "__weakref__ (astra.data.processing.correlationfilter attribute)": [[4, "astra.data.processing.CorrelationFilter.__weakref__", false]], "_build_request_for_signature() (astra.data.processing.correlationfilter class method)": [[4, "astra.data.processing.CorrelationFilter._build_request_for_signature", false]], "_doc_link_module (astra.data.processing.correlationfilter attribute)": [[4, "astra.data.processing.CorrelationFilter._doc_link_module", false]], "_doc_link_template (astra.data.processing.correlationfilter property)": [[4, "astra.data.processing.CorrelationFilter._doc_link_template", false]], "_doc_link_url_param_generator (astra.data.processing.correlationfilter attribute)": [[4, "astra.data.processing.CorrelationFilter._doc_link_url_param_generator", false]], "_get_default_requests() (astra.data.processing.correlationfilter class method)": [[4, "astra.data.processing.CorrelationFilter._get_default_requests", false]], "_get_doc_link() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter._get_doc_link", false]], "_get_metadata_request() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter._get_metadata_request", false]], "_get_param_names() (astra.data.processing.correlationfilter class method)": [[4, "astra.data.processing.CorrelationFilter._get_param_names", false]], "_get_params_html() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter._get_params_html", false]], "_html_repr() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter._html_repr", false]], "_repr_html_ (astra.data.processing.correlationfilter property)": [[4, "astra.data.processing.CorrelationFilter._repr_html_", false]], "_repr_html_inner() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter._repr_html_inner", false]], "_repr_mimebundle_() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter._repr_mimebundle_", false]], "_sklearn_auto_wrap_output_keys (astra.data.processing.correlationfilter attribute)": [[4, "astra.data.processing.CorrelationFilter._sklearn_auto_wrap_output_keys", false]], "_validate_params() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter._validate_params", false]], "astra.benchmark": [[1, "module-astra.benchmark", false]], "astra.cli": [[2, "module-astra.cli", false]], "astra.compare": [[3, "module-astra.compare", false]], "astra.data.processing": [[4, "module-astra.data.processing", false]], "astra.metrics": [[5, "module-astra.metrics", false]], "astra.model_selection": [[6, "module-astra.model_selection", false]], "astra.models.classification": [[7, "module-astra.models.classification", false]], "astra.models.regression": [[8, "module-astra.models.regression", false]], "astra.utils": [[9, "module-astra.utils", false]], "build_model() (in module astra.utils)": [[9, "astra.utils.build_model", false]], "check_assumptions() (in module astra.model_selection)": [[6, "astra.model_selection.check_assumptions", false]], "check_best_model() (in module astra.model_selection)": [[6, "astra.model_selection.check_best_model", false]], "classification_metrics (in module astra.metrics)": [[5, "astra.metrics.CLASSIFICATION_METRICS", false]], "classifier_params (in module astra.models.classification)": [[7, "astra.models.classification.CLASSIFIER_PARAMS", false]], "classifiers (in module astra.models.classification)": [[7, "astra.models.classification.CLASSIFIERS", false]], "correlationfilter (class in astra.data.processing)": [[4, "astra.data.processing.CorrelationFilter", false]], "find_n_best_models() (in module astra.model_selection)": [[6, "astra.model_selection.find_n_best_models", false]], "fit() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter.fit", false], [4, "id0", false]], "fit_transform() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter.fit_transform", false], [4, "id3", false]], "get_best_hparams() (in module astra.model_selection)": [[6, "astra.model_selection.get_best_hparams", false]], "get_best_model() (in module astra.model_selection)": [[6, "astra.model_selection.get_best_model", false]], "get_cli_parser() (in module astra.cli)": [[2, "astra.cli.get_CLI_parser", false]], "get_cv_performance() (in module astra.model_selection)": [[6, "astra.model_selection.get_cv_performance", false]], "get_data() (in module astra.utils)": [[9, "astra.utils.get_data", false]], "get_estimator_name() (in module astra.utils)": [[9, "astra.utils.get_estimator_name", false]], "get_feature_names_out() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter.get_feature_names_out", false], [4, "id4", false]], "get_kendalltau_score() (in module astra.metrics)": [[5, "astra.metrics.get_kendalltau_score", false]], "get_metadata_routing() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter.get_metadata_routing", false]], "get_models() (in module astra.utils)": [[9, "astra.utils.get_models", false]], "get_optimised_cv_performance() (in module astra.model_selection)": [[6, "astra.model_selection.get_optimised_cv_performance", false]], "get_params() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter.get_params", false]], "get_pearsonr_score() (in module astra.metrics)": [[5, "astra.metrics.get_pearsonr_score", false]], "get_scores() (in module astra.utils)": [[9, "astra.utils.get_scores", false]], "get_spearmanr_score() (in module astra.metrics)": [[5, "astra.metrics.get_spearmanr_score", false]], "higher_better (in module astra.metrics)": [[5, "astra.metrics.HIGHER_BETTER", false]], "known_metrics (in module astra.metrics)": [[5, "astra.metrics.KNOWN_METRICS", false]], "load_config() (in module astra.utils)": [[9, "astra.utils.load_config", false]], "lower_better (in module astra.metrics)": [[5, "astra.metrics.LOWER_BETTER", false]], "main() (in module astra.cli)": [[2, "astra.cli.main", false]], "module": [[1, "module-astra.benchmark", false], [2, "module-astra.cli", false], [3, "module-astra.compare", false], [4, "module-astra.data.processing", false], [5, "module-astra.metrics", false], [6, "module-astra.model_selection", false], [7, "module-astra.models.classification", false], [8, "module-astra.models.regression", false], [9, "module-astra.utils", false]], "multiclass_metrics (in module astra.metrics)": [[5, "astra.metrics.MULTICLASS_METRICS", false]], "non_probabilistic_models (in module astra.models.classification)": [[7, "astra.models.classification.NON_PROBABILISTIC_MODELS", false]], "perform_statistical_tests() (in module astra.model_selection)": [[6, "astra.model_selection.perform_statistical_tests", false]], "print_file_console() (in module astra.utils)": [[9, "astra.utils.print_file_console", false]], "print_final_results() (in module astra.utils)": [[9, "astra.utils.print_final_results", false]], "print_performance() (in module astra.utils)": [[9, "astra.utils.print_performance", false]], "regression_metrics (in module astra.metrics)": [[5, "astra.metrics.REGRESSION_METRICS", false]], "regressor_params (in module astra.models.regression)": [[8, "astra.models.regression.REGRESSOR_PARAMS", false]], "regressors (in module astra.models.regression)": [[8, "astra.models.regression.REGRESSORS", false]], "run() (in module astra.benchmark)": [[1, "astra.benchmark.run", false]], "run() (in module astra.compare)": [[3, "astra.compare.run", false]], "run_cv() (in module astra.model_selection)": [[6, "astra.model_selection.run_CV", false]], "scoring (in module astra.metrics)": [[5, "astra.metrics.SCORING", false]], "set_output() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter.set_output", false]], "set_params() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter.set_params", false]], "to_drop (astra.data.processing.correlationfilter attribute)": [[4, "astra.data.processing.CorrelationFilter.to_drop", false]], "transform() (astra.data.processing.correlationfilter method)": [[4, "astra.data.processing.CorrelationFilter.transform", false], [4, "id5", false]], "tukey_hsd() (in module astra.model_selection)": [[6, "astra.model_selection.tukey_hsd", false]]}, "objects": {"astra": [[1, 0, 0, "-", "benchmark"], [2, 0, 0, "-", "cli"], [3, 0, 0, "-", "compare"], [5, 0, 0, "-", "metrics"], [6, 0, 0, "-", "model_selection"], [9, 0, 0, "-", "utils"]], "astra.benchmark": [[1, 1, 1, "", "run"]], "astra.cli": [[2, 1, 1, "", "get_CLI_parser"], [2, 1, 1, "", "main"]], "astra.compare": [[3, 1, 1, "", "run"]], "astra.data": [[4, 0, 0, "-", "processing"]], "astra.data.processing": [[4, 2, 1, "", "CorrelationFilter"]], "astra.data.processing.CorrelationFilter": [[4, 3, 1, "", "__dict__"], [4, 4, 1, "", "__getstate__"], [4, 4, 1, "", "__init__"], [4, 4, 1, "", "__init_subclass__"], [4, 3, 1, "", "__module__"], [4, 4, 1, "", "__repr__"], [4, 4, 1, "", "__setstate__"], [4, 4, 1, "", "__sklearn_clone__"], [4, 4, 1, "", "__sklearn_tags__"], [4, 3, 1, "", "__weakref__"], [4, 4, 1, "", "_build_request_for_signature"], [4, 3, 1, "", "_doc_link_module"], [4, 5, 1, "", "_doc_link_template"], [4, 3, 1, "", "_doc_link_url_param_generator"], [4, 4, 1, "", "_get_default_requests"], [4, 4, 1, "", "_get_doc_link"], [4, 4, 1, "", "_get_metadata_request"], [4, 4, 1, "", "_get_param_names"], [4, 4, 1, "", "_get_params_html"], [4, 4, 1, "", "_html_repr"], [4, 5, 1, "", "_repr_html_"], [4, 4, 1, "", "_repr_html_inner"], [4, 4, 1, "", "_repr_mimebundle_"], [4, 3, 1, "", "_sklearn_auto_wrap_output_keys"], [4, 4, 1, "", "_validate_params"], [4, 4, 1, "id0", "fit"], [4, 4, 1, "id3", "fit_transform"], [4, 4, 1, "id4", "get_feature_names_out"], [4, 4, 1, "", "get_metadata_routing"], [4, 4, 1, "", "get_params"], [4, 4, 1, "", "set_output"], [4, 4, 1, "", "set_params"], [4, 3, 1, "", "to_drop"], [4, 4, 1, "id5", "transform"]], "astra.metrics": [[5, 3, 1, "", "CLASSIFICATION_METRICS"], [5, 3, 1, "", "HIGHER_BETTER"], [5, 3, 1, "", "KNOWN_METRICS"], [5, 3, 1, "", "LOWER_BETTER"], [5, 3, 1, "", "MULTICLASS_METRICS"], [5, 3, 1, "", "REGRESSION_METRICS"], [5, 3, 1, "", "SCORING"], [5, 1, 1, "", "get_kendalltau_score"], [5, 1, 1, "", "get_pearsonr_score"], [5, 1, 1, "", "get_spearmanr_score"]], "astra.model_selection": [[6, 1, 1, "", "check_assumptions"], [6, 1, 1, "", "check_best_model"], [6, 1, 1, "", "find_n_best_models"], [6, 1, 1, "", "get_best_hparams"], [6, 1, 1, "", "get_best_model"], [6, 1, 1, "", "get_cv_performance"], [6, 1, 1, "", "get_optimised_cv_performance"], [6, 1, 1, "", "perform_statistical_tests"], [6, 1, 1, "", "run_CV"], [6, 1, 1, "", "tukey_hsd"]], "astra.models": [[7, 0, 0, "-", "classification"], [8, 0, 0, "-", "regression"]], "astra.models.classification": [[7, 3, 1, "", "CLASSIFIERS"], [7, 3, 1, "", "CLASSIFIER_PARAMS"], [7, 3, 1, "", "NON_PROBABILISTIC_MODELS"]], "astra.models.regression": [[8, 3, 1, "", "REGRESSORS"], [8, 3, 1, "", "REGRESSOR_PARAMS"]], "astra.utils": [[9, 1, 1, "", "build_model"], [9, 1, 1, "", "get_data"], [9, 1, 1, "", "get_estimator_name"], [9, 1, 1, "", "get_models"], [9, 1, 1, "", "get_scores"], [9, 1, 1, "", "load_config"], [9, 1, 1, "", "print_file_console"], [9, 1, 1, "", "print_final_results"], [9, 1, 1, "", "print_performance"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property"}, "terms": {"": [1, 2, 4, 6], "0": [2, 4], "0487": 4, "1": [1, 2, 4], "2": 4, "3": 4, "4": 4, "487": 4, "5": 4, "6": 4, "7": 4, "700": 4, "8": 4, "9": 4, "95": 4, "A": [4, 5, 6, 7, 8, 9], "If": [1, 2, 4, 6, 9], "It": 4, "The": [1, 2, 3, 4, 5, 6, 9], "There": 2, "To": 12, "Will": [1, 2], "__": 4, "__annotations__": 4, "__dict__": 4, "__doc__": 4, "__getstate__": 4, "__init__": 4, "__init_subclass__": 4, "__metadata_request__": 4, "__module__": 4, "__repr__": 4, "__setstate__": 4, "__sklearn_clone__": 4, "__sklearn_tags__": 4, "__weakref__": 4, "_build_request_for_signatur": 4, "_doc_link_modul": 4, "_doc_link_templ": 4, "_doc_link_url_param_gener": 4, "_get_default_request": 4, "_get_doc_link": 4, "_get_metadata_request": 4, "_get_param_nam": 4, "_get_params_html": 4, "_html_repr": 4, "_parameter_constraint": 4, "_repr_html": 4, "_repr_html_": 4, "_repr_html_inn": 4, "_repr_mimbundle_": 4, "_repr_mimebundle_": 4, "_request": 4, "_sklearn_auto_wrap_output_kei": 4, "_validate_param": 4, "abov": [1, 2, 4, 6], "accept": 4, "ad": 4, "addition": 9, "after": [4, 9], "against": 9, "all": [4, 5, 6], "allow": 4, "an": [1, 2, 4, 9, 11, 12], "ani": [1, 9], "anova": 6, "api": [4, 12], "append": 9, "appli": [6, 9], "appropri": 2, "ar": [1, 2, 4, 5, 6, 9], "arg": 4, "argpars": 2, "argument": [1, 2, 4], "argumentpars": 2, "arrai": 4, "assign": 6, "assum": 6, "assumpt": [1, 6], "astra": [10, 11, 13], "attribut": 4, "auto": 1, "avail": [2, 4], "base": [4, 9], "baseestim": [4, 6, 7, 8, 9], "basic": 12, "befor": [6, 9], "belong": 4, "below": [1, 2, 6], "benchmark": [2, 9], "best": [1, 2, 6], "better": [5, 6], "between": 6, "bf_corr": 6, "bonferroni": 6, "bool": [1, 4, 6], "build": [4, 9], "build_model": 9, "bundl": 4, "cach": [1, 2], "calcul": [4, 5], "can": 9, "cf": 4, "check": [1, 4, 6], "check_assumpt": 6, "check_best_model": 6, "choic": [1, 2, 6], "choos": 11, "class": [4, 9], "classif": [1, 2, 5], "classifi": 7, "classification_metr": 5, "classifier_param": 7, "classmethod": 4, "code": 2, "coeffici": 5, "collect": 4, "column": [1, 2, 6, 9], "combin": 4, "command": 2, "compar": 2, "comparison": [2, 3, 6], "compat": 4, "compon": 4, "configur": [4, 9], "conov": 6, "consid": 4, "consol": 9, "constant": [1, 2, 6, 9], "constraint": 4, "constructor": 4, "consum": 4, "contain": [1, 2, 3, 4, 5, 6, 7, 8, 9], "contribut": [10, 12], "correct": 6, "correl": [1, 2, 4, 5, 6, 9], "correlationfilt": 4, "correspond": [5, 7, 8], "creat": 4, "cross": 6, "csv": [1, 2, 9], "current": [1, 2], "custom": [6, 9], "custom_model": [1, 9], "custom_param": 6, "cv": [1, 2, 3, 9], "cv_result": 3, "cv_results_df": 9, "cv_results_path": 2, "data": [1, 2, 6, 9], "data_df": 6, "datafram": [4, 6, 9], "dataset": [1, 2, 4], "deep": 4, "default": [1, 2, 4, 6, 9], "defin": [1, 4], "degre": 6, "depend": 4, "depth": 12, "descript": 4, "detail": [10, 13], "determin": [4, 6, 9], "dev": 4, "develop": [4, 12], "deviat": 9, "df": 6, "dict": [1, 4, 5, 6, 7, 8, 9], "dictionari": [1, 4, 5, 6, 7, 8, 9], "differ": [3, 4, 6], "direct": 9, "directori": [1, 2, 3, 6], "displai": 4, "do": [4, 7], "docstr": 4, "document": 4, "doe": [1, 2, 4], "don": 6, "drop": 4, "dure": [4, 6], "e": 4, "each": [4, 6, 9], "empti": 4, "encapsul": 4, "end": 9, "error": [2, 6], "estim": [4, 6, 9], "estimator_html_repr": 4, "evalu": [1, 2, 5, 6, 9], "exampl": 4, "except": 4, "exclud": 9, "exist": [1, 2, 4], "exit": 2, "expect": 4, "experi": [1, 2, 6], "explicitli": 4, "extens": [1, 2], "extract": 9, "fals": [1, 2, 4, 6], "favor": 4, "featur": [1, 2, 4, 6, 9], "features_col": 6, "file": [1, 2, 9], "file_path": 9, "filter": 4, "final": [1, 2, 9], "final_hyperparamet": 9, "final_model_nam": 9, "find": 6, "find_n_best_model": 6, "first": [1, 2], "fit": 4, "fit_transform": 4, "float": [1, 2, 4, 5, 6, 9], "fold": [1, 2, 3, 6, 9], "fold_col": [1, 2, 6], "folder": 1, "form": 4, "format": [4, 9], "found": 6, "freedom": 6, "friedman": 6, "from": [4, 6, 9], "function": [1, 2, 3, 4, 5, 6, 9], "gener": 4, "get": [2, 4, 6, 9, 12], "get_best_hparam": 6, "get_best_model": 6, "get_cli_pars": 2, "get_config": 4, "get_cv_perform": 6, "get_data": 9, "get_estimator_nam": 9, "get_feature_names_out": 4, "get_kendalltau_scor": 5, "get_metadata_rout": 4, "get_model": 9, "get_optimised_cv_perform": 6, "get_param": 4, "get_pearsonr_scor": 5, "get_scor": 9, "get_spearmanr_scor": 5, "given": [4, 6], "grid": [1, 6, 7, 8, 9], "gridsearchcv": 6, "guid": [4, 12], "hasattr": 4, "have": [4, 7], "higher": 5, "higher_bett": 5, "highli": 4, "hoc": 6, "homogen": 6, "how": [4, 10, 12, 13], "hsd": 6, "html": 4, "http": 4, "hyperparamet": [1, 2, 6, 7, 8, 9], "i": [1, 2, 4, 6, 9], "id": 4, "identifi": 4, "ignor": 4, "implement": 4, "import": [4, 11], "imput": [1, 2, 6, 9], "indic": [4, 6], "infer": [1, 2, 4], "inform": 4, "initi": 4, "input": 4, "input_featur": 4, "instanc": [4, 7, 8], "instanti": [7, 8, 9], "instead": 6, "int": [1, 2, 3, 6, 9], "interpret": 4, "invalid": 1, "iter": 6, "its": [4, 6], "itself": 4, "job": [1, 2, 6], "jupyt": 4, "k": [1, 2], "kei": [1, 4, 6, 9], "kendal": 5, "kernel": 4, "knn": [1, 2, 6, 9], "known_metr": 5, "kwarg": 4, "latter": 4, "learn": [4, 6, 7, 8, 9, 12], "level": 6, "like": [4, 6], "linear_model": 4, "link": 4, "list": [1, 2, 3, 4, 5, 6, 7, 8, 9], "load": [1, 2, 9], "load_config": 9, "logic": 4, "logisticregress": 4, "long": 4, "look": 4, "lower": 5, "lower_bett": 5, "mae": [1, 2], "main": [1, 2, 3, 6, 9], "main_metr": [1, 2, 3, 6, 9], "make": 4, "map": [4, 5, 6, 7, 8], "mappingproxi": 4, "matrix": 4, "mean": [1, 2, 6, 9], "mean_score_main": 9, "measur": 6, "mechan": 4, "median": [1, 2, 6, 9], "median_score_main": 9, "messag": 9, "met": [1, 6], "metadata": 4, "metadatarequest": 4, "method": [1, 2, 4, 7], "method_request": 4, "methodmetadatarequest": 4, "metric": [1, 2, 3, 6, 9], "metric_list": 6, "might": 11, "mime": 4, "minmax": [1, 2, 6, 9], "miss": [1, 2, 6], "mode": 9, "model": [1, 2, 3, 5, 6, 9], "model_class": [6, 9], "model_nam": 9, "modul": [4, 5, 6, 7, 8, 9], "more": 4, "mse": [1, 2, 6], "multiclass": 5, "multiclass_metr": 5, "multipl": 6, "must": 4, "n": [1, 2, 4, 6, 9], "n_char_max": 4, "n_featur": 4, "n_fold": [3, 6, 9], "n_job": [1, 2, 6], "n_sampl": 4, "name": [1, 2, 4, 5, 6, 7, 8, 9], "ndarrai": 4, "nest": [1, 2, 4, 6], "newlin": 9, "non": 6, "non_probabilistic_model": 7, "none": [1, 2, 3, 4, 6, 9], "normal": 6, "note": 4, "np": 4, "number": [1, 2, 3, 6, 9], "numer": [6, 9], "numpi": 4, "nxk": [1, 2], "object": [4, 6], "occur": 2, "one": [4, 6], "onli": [4, 6], "optimis": 6, "option": [4, 6, 9], "org": 4, "other": [4, 6], "otherwis": [6, 9], "out": 4, "output": [4, 6, 9], "over": [6, 7, 8], "overview": 11, "p": 6, "packag": 9, "page": [4, 10, 13], "pair": 6, "pairwis": 6, "panda": [4, 9], "parallel": [1, 2, 6], "param": 4, "param_nam": 4, "paramet": [1, 3, 4, 5, 6, 9], "parametr": [1, 2, 6], "paramsdict": 4, "parent": 4, "parquet": [1, 2, 9], "pars": 2, "parser": 2, "path": [1, 2, 3, 9], "pd": [6, 9], "pearson": 5, "pep": 4, "per": 6, "perform": [1, 2, 6, 9], "perform_statistical_test": 6, "pickl": [1, 2, 9], "pipelin": [4, 9], "pleas": 4, "polar": 4, "possibl": 4, "post": 6, "predict": [1, 2, 5], "predict_proba": 7, "prepar": 4, "preprocess": 9, "present": 4, "print": [6, 9], "print_file_consol": 9, "print_final_result": 9, "print_perform": 9, "properti": 4, "provid": [1, 2, 9], "py": 4, "python": 4, "r2": [1, 2], "rais": [1, 9], "rank": 6, "read": 4, "reason": 6, "recogn": 9, "redund": 4, "refer": [4, 12], "regress": [1, 2, 5], "regression_metr": 5, "regressor": 8, "regressor_param": 8, "remain": 6, "remov": [1, 2, 4, 6, 9], "remove_const": [1, 2, 6, 9], "remove_correl": [1, 2, 6, 9], "render": 4, "repeat": [1, 2, 6], "repr": 4, "represent": 4, "request": 4, "residu": 6, "residual_dof": 6, "respect": 6, "result": [1, 2, 3, 6, 9], "results_d": 6, "results_dict": [6, 9], "retain": 4, "return": [1, 2, 3, 4, 5, 6, 9], "rout": 4, "router": 4, "run": [1, 2, 3, 6], "run_cv": 6, "run_nested_cv": [1, 2], "save": [1, 2, 6], "scale": [1, 2, 6, 9], "scaler": [1, 2, 6, 9], "scikit": [4, 6, 7, 8, 9], "score": [5, 6, 9], "score_mean": 6, "seamlessli": 4, "search": [1, 6, 7, 8, 9], "sec_metr": [1, 2, 3, 6, 9], "sec_metrics_scor": 9, "secondari": [1, 2, 3, 6, 9], "secondary_metr": 6, "see": 4, "select": [1, 2, 5, 6], "self": 4, "seri": 6, "set": [4, 11], "set_": 4, "set_output": 4, "set_param": 4, "shape": 4, "should": [1, 2, 4, 9], "sign": 6, "signatur": 4, "signific": 6, "significantli": 6, "simpl": 4, "singl": [1, 2], "sk": 4, "sklearn": 4, "so": 4, "some": 9, "sourc": [1, 2, 3, 4, 5, 6, 9], "spearman": 5, "specif": 4, "specifi": [1, 2, 4, 6, 9], "sphx_glr_auto_examples_miscellaneous_plot_set_output": 4, "squar": 6, "standard": [1, 2, 6, 9], "start": [1, 9, 12], "state": 4, "statist": [2, 6], "std": 9, "std_score_main": 9, "step": [4, 9], "str": [1, 3, 4, 6, 7, 8, 9], "strategi": [6, 9], "string": [1, 2, 4, 9], "style": 4, "subobject": 4, "success": 2, "support": [1, 2, 9], "t": 6, "tabl": 4, "take": 4, "target": [1, 2, 6], "target_col": 6, "task": [1, 2], "tau": 5, "templat": 4, "term": 4, "test": [1, 2, 6], "test_statist": 6, "than": 6, "thei": [1, 2], "thi": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13], "those": 4, "threshold": [1, 2, 4, 6, 9], "through": 4, "to_drop": 4, "total": 6, "track": 6, "train": [1, 2], "transform": 4, "transformermixin": 4, "treat": [1, 2], "true": [4, 5, 6], "tukei": 6, "tukey_hsd": 6, "tune": [1, 2], "tupl": [1, 6, 9], "tutori": 11, "two": [2, 6], "type": [1, 2, 3, 4, 5, 6, 7, 8, 9], "unchang": 4, "unknown": 9, "unsupport": 9, "until": 6, "updat": 4, "url": 4, "us": [1, 2, 3, 4, 6, 9, 12, 13], "user": [4, 12], "util": 4, "valid": [1, 2, 4, 6, 9], "validate_parameter_constraint": 4, "valu": [1, 2, 4, 5, 6, 9], "valueerror": [1, 9], "variabl": [6, 7, 8], "varianc": [1, 2, 6, 9], "verbos": 6, "version": 4, "violat": 6, "visual": 4, "wa": 4, "warn": 6, "we": 4, "weak": 4, "well": 4, "when": 4, "where": [1, 2, 9], "whether": [1, 2, 6], "which": [4, 5], "who": 4, "wilcoxon": 6, "without": [1, 2], "work": 4, "worst": 6, "would": 4, "write": [9, 11], "written": 9, "www": 4, "x": 4, "xt": 4, "y": 4, "y_pred": 5, "y_true": 5, "yaml": 9, "you": 11, "yt": 4}, "titles": ["API Documentation", "astra.benchmark", "astra.cli", "astra.compare", "astra.data.processing", "astra.metrics", "astra.model_selection", "astra.models.classification", "astra.models.regression", "astra.utils", "Developer Guide", "Getting Started", "Welcome to ASTRA's documentation!", "User Guide"], "titleterms": {"": 12, "api": 0, "astra": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12], "benchmark": 1, "classif": 7, "cli": 2, "compar": 3, "data": 4, "develop": 10, "document": [0, 12], "get": 11, "guid": [10, 13], "metric": 5, "model": [7, 8], "model_select": 6, "process": 4, "regress": 8, "start": 11, "user": 13, "util": 9, "welcom": 12}})